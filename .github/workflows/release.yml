name: "release"

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  prepare:
    uses: ./.github/workflows/precheck.yml

  release:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: rp
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: Debug outputs
        run: |
          echo "releases_created=${{ steps.rp.outputs.releases_created }}"
          echo "paths_released=${{ steps.rp.outputs.paths_released }}"
          echo "prs_created=${{ steps.rp.outputs.prs_created }}"
          echo "tags_created=${{ steps.rp.outputs.tags_created }}"

      - name: Compute should_publish
        id: gates
        run: |
          PR="${{ steps.rp.outputs.prs_created }}"
          REL="${{ steps.rp.outputs.releases_created }}"
          PATHS='${{ steps.rp.outputs.paths_released }}'
          if [ "$PATHS" = "" ] || [ "$PATHS" = "[]" ] || [ "$PATHS" = "null" ]; then
            echo "paths_clean=" >> $GITHUB_OUTPUT
          else
            echo "paths_clean=$PATHS" >> $GITHUB_OUTPUT
          fi
          if [ "$REL" = "true" ] || [ "$PR" = "true" ] || [ ! -z "$PATHS" ] && [ "$PATHS" != "[]" ] && [ "$PATHS" != "null" ]; then
            echo "publish=true" >> $GITHUB_OUTPUT
          else
            echo "publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if nothing released
        if: ${{ steps.gates.outputs.publish == 'false' }}
        run: echo "No packages released in this run. Skipping publish." && exit 0

      - uses: actions/checkout@v4
        if: ${{ steps.gates.outputs.publish == 'true' }}
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}

      - uses: pnpm/action-setup@v4
        if: ${{ steps.gates.outputs.publish == 'true' }}

      - uses: actions/setup-node@v4
        if: ${{ steps.gates.outputs.publish == 'true' }}
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        if: ${{ steps.gates.outputs.publish == 'true' }}
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        if: ${{ steps.gates.outputs.publish == 'true' }}
        run: pnpm -r build

      - name: Publish @coffee-machine/cli
        if: ${{ steps.gates.outputs.publish == 'true' && contains(steps.rp.outputs.paths_released, 'packages/cli' ) }}
        working-directory: packages/cli
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public

      - name: Publish @coffee-machine/core
        if: ${{ steps.gates.outputs.publish == 'true' && contains(steps.rp.outputs.paths_released, 'packages/core' ) }}
        working-directory: packages/core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public
